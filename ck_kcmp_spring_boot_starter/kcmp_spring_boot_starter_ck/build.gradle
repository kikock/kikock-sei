// 依赖
dependencies {
    compile(
            "com.kcmp.ck:kcmp_core_ck:${start_version}",
            'org.fluentd:fluent-logger:0.3.3',
//            'com.google.protobuf:protobuf-java:3.7.1',
            'io.zipkin.brave:brave-context-slf4j:4.19.1',
            'io.zipkin.reporter2:zipkin-sender-okhttp3:2.5.0',
//            'io.protostuff:protostuff-core:1.6.0',
//            'io.protostuff:protostuff-runtime:1.6.0',
            'org.apache.cxf:cxf-rt-frontend-jaxws:3.1.10',
            'org.apache.cxf:cxf-rt-rs-service-description-swagger:3.1.10',
//            'com.alipay.sofa:hessian:4.0.3',
            "org.webjars:swagger-ui:2.2.10-1",
            "mysql:mysql-connector-java:${mysql_version}",
//            "net.sf.json-lib:json-lib:2.4:jdk15@jar",
//            'com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2',
    )

//    //只在本项目依赖
//    implementation(
//            'io.grpc:grpc-api:1.21.0',
//            'io.grpc:grpc-context:1.21.0',
//            'io.grpc:grpc-core:1.21.0',
//            'io.grpc:grpc-netty-shaded:1.21.0',
//            'io.grpc:grpc-protobuf:1.21.0',
//            'io.grpc:grpc-protobuf-lite:1.21.0',
//            'io.grpc:grpc-stub:1.21.0',
//    )

    //spring依赖
    compile(
//            "org.springframework.boot:spring-boot-actuator-autoconfigure:${springBootVersion}",
//            "org.springframework.boot:spring-boot-actuator:${springBootVersion}",
//            "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
            "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}",
            "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-json:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-logging:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter:${springBootVersion}",
            "org.springframework.boot:spring-boot-test-autoconfigure:${springBootVersion}",
            "org.springframework.boot:spring-boot-test:${springBootVersion}",
            "org.springframework.boot:spring-boot:${springBootVersion}",
    )

//    //spring-cloud依赖
//    compile(
//            "org.springframework.cloud:spring-cloud-starter-config:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-config-client:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-starter-zookeeper:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-starter-zookeeper-discovery:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-zookeeper:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-zookeeper-core:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-zookeeper-discovery:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-openfeign-core:${springCloudVersion}",
//            "org.springframework.cloud:spring-cloud-starter-openfeign:${springCloudVersion}",
//    )
}

// 打jar包
jar {
    manifest {
        attributes("Manifest-Version": "$project.version")
        attributes("Extension-Name": "$project.name")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
}
/////////////////////////////////////上传Maven仓库////////////////////////////////////////
//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}
