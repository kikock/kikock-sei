apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

war {
    enabled = true
    //包名称
    archiveName "config-center-service.${extension}"
    //包存放路径
    destinationDir = file("${rootProject.projectDir}/build/war")
//    // war包中排除WEB-INF\classes\application.properties文件
//    rootSpec.exclude("**/application.properties")
}

springBoot {
    mainClassName = "com.kcmp.ck.center.ConfigCenterRestApplication"
}

dependencies {
    compile project(':config-dao')

    compile(
            "org.apache.cxf:cxf-spring-boot-starter-jaxrs:$cxf_spring_boot_version"
    )
    compile(
            'io.swagger:swagger-jaxrs:1.5.12',
    ) {
        exclude group: 'javax.ws.rs', module: 'jsr311-api'
    }
    compile(
            "org.springframework.retry:spring-retry"
    )
    compile(
            "org.springframework:spring-aspects"
    )
    compile(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-redis",
            "org.springframework.boot:spring-boot-starter-thymeleaf",
            "org.springframework.boot:spring-boot-starter-security",
            "de.codecentric:spring-boot-admin-starter-client:${springBootAdmin}",
            "org.webjars:swagger-ui:${swagger_version}",
            "org.apache.cxf:cxf-rt-rs-service-description-swagger:${cxf_spring_boot_version}",
            "org.springframework.kafka:spring-kafka:${spring_kafka_version}"
    )

    //谷歌工具包
    compile 'com.google.guava:guava:31.1-jre'
    compile("org.apache.curator:curator-recipes:${curator_version}") { exclude group: 'log4j' }
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile 'org.fluentd:fluent-logger:0.3.3'
    compile 'com.sndyuk:logback-more-appenders:1.4.3'
    compile 'redis.clients:jedis:2.9.0'

    // 测试依赖
    testCompile(
            "org.springframework.boot:spring-boot-starter-test"
    )
}

/////////////////////////////////////上传Maven仓库 开始////////////////////////////////////////
//打包
jar {
    enabled = true
    manifest {
        attributes("Implementation-Title": "kcmp-config-service")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
}
//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}

/////////////////////////////////////上传Maven仓库  结束////////////////////////////////////////

