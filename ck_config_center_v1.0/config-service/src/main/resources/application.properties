#Oracle
#spring.datasource.url=jdbc:oracle:thin:@211.149.215.144:1521:oracle46
#spring.datasource.username=config_center_dba
#spring.datasource.password=Tgw6m4DI
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#Mysql
spring.datasource.url=jdbc:mysql://localhost:3306/kiko_config_center?characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=111111
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=true
#去掉警告
spring.jpa.open-in-view=false
#cxf rest
cxf.path=/api
cxf.jaxrs.component-scan=true

spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
# 前缀设置，SpringBoot默认模板放置在classpath:/template/目录下
spring.thymeleaf.prefix=classpath:/templates/
# 后缀设置，默认为.html
spring.thymeleaf.suffix=.html
#    优先级
spring.thymeleaf.template-resolver-order=1
# 模板的媒体类型设置，默认为text/html
spring.thymeleaf.servlet.content-type=text/html
# 是否启用thymeleaf模板解析
spring.thymeleaf.servlet.enabled=true
spring.thymeleaf.servlet.mode=HTML
spring.thymeleaf.servlet.encoding=utf-8
# 是否开启模板缓存（建议：开发环境下设置为false，生产环境设置为true）
spring.thymeleaf.cache=false
#在呈现模板之前检查模板是否存在
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
server.port=8081
server.servlet.context-path=/config-center
#zookeeper地址，可以多个（根据实际情况修改）
#zk_connectString=kikock.tk:12181
zk_connectString=192.168.66.88:2181
# session存储类型.

spring.session.store-type=redis
# REDIS集群配置
# （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
# spring.redis.cluster.max-redirects=8
# （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
#spring.redis.cluster.nodes=211.149.188.210:6379,211.149.188.210:6380
# 连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379
#spring.redis.url=
# Redis服务器地址（根据实际情况修改）
#spring.redis.host=kikock.tk
spring.redis.host=127.0.0.1
# Redis服务器连接端口（根据实际情况修改）
spring.redis.port=6379
#spring.redis.port=16379
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=10
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=3000
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=2000
# kafka配置
# 指定kafka地址，可以多个（根据实际情况修改）
#kafka.bootstrap-servers=kikock.tk:9092
kafka.bootstrap-servers=192.168.66.88:9092
# 指定默认消费者group id
kafka.consumer.group-id=config_center_group
# 指定默认topic id
kafka.topic.serialnumber=config_center_serialnumber
kafka.consumer.properties.security.protocol=PLAINTEXT

spring.kafka.listener.missing-topics-fatal=false

# 日志收集配置
#fluentd.host=211.149.175.40
#fluentd.port=24224
## 注册服务名
spring.application.name=config-center
spring.boot.admin.client.url=http://localhost:19001
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
#增加配置中心用户和密码配置
center.uesr=admin
center.password=admin123


CONFIG_CENTER_API=http://localhost:8081/config-center/api/


