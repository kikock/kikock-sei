// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// 扩展定义
ext {

}

apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
war {
    enabled = true
    //包名称
    archiveName "flow_service_v1.0.war"
    //包存放路径
    destinationDir = file("${rootProject.projectDir}/build/war")
}

// 依赖
dependencies {
    compile project(':flow_entity_ck')
    compile project(':flow_dao_ck')
    compile project(':flow_api_ck')
    compile project(':flow_service_client_ck')
    compile(
            "com.kcmp.ck:kcmp_spring_boot_starter:${start_version}",
            //整合activiti所需要的jar
//            'org.activiti', name: 'activiti-diagram-rest', version: '5.22.0'
            "org.activiti:activiti-engine:${activiti_version}",
            "org.activiti:activiti-bpmn-model:${activiti_version}",
            "org.activiti:activiti-bpmn-converter:${activiti_version}",
            "org.activiti:activiti-bpmn-layout:${activiti_version}",
            "org.activiti:activiti-spring:${activiti_version}",
            "org.activiti:activiti-process-validation:${activiti_version}",

    )
    compile(
            "org.codehaus.groovy:groovy:2.4.10",
            "com.fasterxml.uuid:java-uuid-generator:4.0.1",
            "net.sf.dozer:dozer:5.5.1",
    )
    // 测试依赖
    testCompile(
            "org.springframework.boot:spring-boot-starter-test"
    )
}

jar {
    manifest {
        attributes("Manifest-Version": "$project.version")
        attributes("Extension-Name": "$project.name")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
    enabled = true
}

/////////////////////////////////////上传Maven仓库////////////////////////////////////////
//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//跳过上传任务
uploadArchives {
    enabled = false
}
